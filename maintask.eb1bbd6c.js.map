{"mappings":"gkBAMA,MAAMA,EAAOC,SAASC,eAAe,eAC/BC,EAAQF,SAASG,cAAc,SAC/BC,EAAWJ,SAASG,cAAc,YAClCE,EAAcL,SAASG,cAAc,cACrCG,EAAc,IAAI,EAAAC,EAAAC,SAClBC,EAAkB,IAAIC,EAAAC,GAAJ,CAAmB,cAsB3CC,eAAeC,IACb,IACE,MAAMC,QAAiBR,EAAYS,YAC7BC,EAAgBF,EAASG,KAAKC,KAC9BC,EAA0BC,KAAKC,KACnCP,EAASG,KAAKK,UAAYhB,EAAYiB,SAqBxC,GAlBgC,IAA5BT,EAASG,KAAKK,WAChBE,EAAAC,OAAOC,QACL,4EAIqB,IAArBpB,EAAYqB,MAA0C,IAA5Bb,EAASG,KAAKK,YAC1CjB,EAAYuB,UAAUC,OAAO,aAC7BL,EAAAC,OAAOK,KAAK,oBAAoBhB,EAASG,KAAKK,sBAG5ChB,EAAYqB,OAASR,IACvBd,EAAYuB,UAAUG,IAAI,aAC1BP,EAAAC,OAAOO,QACL,+DAI4B,IAA5BlB,EAASG,KAAKK,UAAiB,CACjC,MAAMW,EAAajB,EAAckB,KAAIC,GAC5B,8EAEkBA,EAAMC,wDACDD,EAAME,sBAAsBF,EAAMG,6JAGVH,EAAMI,0EACNJ,EAAMK,6EACHL,EAAMM,iFACLN,EAAMO,wEAMlE,GAFAtC,EAASuC,mBAAmB,YAAaV,EAAWW,KAAK,KAEhC,IAArBtC,EAAYqB,KAAY,CAC1B,MAAQkB,OAAQC,GAAe9C,SAC5BG,cAAc,YACd4C,kBAAkBC,wBAErBC,OAAOC,SAAS,CACdC,IAAkB,EAAbL,EACLM,SAAU,U,CAId9C,EAAY+C,WACZ5C,EAAgB6C,S,EAElB,MAAOC,GACPC,QAAQC,IAAIF,E,EA9EhBxD,EAAK2D,iBAAiB,UAItB,SAAkBC,GAChBA,EAAEC,iBACF,MAAMC,EAAe3D,EAAM4D,MAAMC,OAEjC,GAAqB,KAAjBF,EAAqB,OAEzBxD,EAAYuB,UAAUG,IAAI,aAE1B3B,EAAS4D,UAAY,GACrB1D,EAAY2D,YAEZ3D,EAAY4D,YAAcL,EAE1BhD,G,IAhBFR,EAAYuB,UAAUG,IAAI,aAC1B1B,EAAYqD,iBAAiB,QAAS7C","sources":["src/index.js"],"sourcesContent":["import './css/styles.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport FetchImages from './fetchImages.js';\n\nconst form = document.getElementById('search-form');\nconst input = document.querySelector('input');\nconst cardList = document.querySelector('.gallery');\nconst loadMoreBtn = document.querySelector('.load-more');\nconst fetchImages = new FetchImages();\nconst galleryOfImages = new SimpleLightbox('.gallery a');\n\nform.addEventListener('submit', onSubmit);\nloadMoreBtn.classList.add('is-hidden');\nloadMoreBtn.addEventListener('click', fetchImagesFoo);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const currentQuery = input.value.trim();\n\n  if (currentQuery === '') return;\n\n  loadMoreBtn.classList.add('is-hidden');\n\n  cardList.innerHTML = '';\n  fetchImages.resetPage();\n\n  fetchImages.searchQuery = currentQuery;\n\n  fetchImagesFoo();\n}\n\nasync function fetchImagesFoo() {\n  try {\n    const response = await fetchImages.getImages();\n    const arrayOfImages = response.data.hits;\n    const maxAllowedAmountOfPages = Math.ceil(\n      response.data.totalHits / fetchImages.perPage\n    );\n\n    if (response.data.totalHits === 0) {\n      Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n    }\n\n    if (fetchImages.page === 1 && response.data.totalHits !== 0) {\n      loadMoreBtn.classList.remove('is-hidden');\n      Notify.info(`Hooray! We found ${response.data.totalHits} images.`);\n    }\n\n    if (fetchImages.page === maxAllowedAmountOfPages) {\n      loadMoreBtn.classList.add('is-hidden');\n      Notify.warning(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n    }\n\n    if (response.data.totalHits !== 0) {\n      const cardMarkup = arrayOfImages.map(image => {\n        return `\n                <div class=\"photo-card\">\n                      <a href=\"${image.largeImageURL}\">\n                          <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" loading=\"lazy\"/>\n                      </a>\n                      <div class=\"info\">\n                           <p class=\"info-item\"><b>Likes</b>${image.likes}</p>\n                           <p class=\"info-item\"><b>Views</b>${image.views}</p>\n                           <p class=\"info-item\"><b>Comments</b>${image.comments}</p>\n                           <p class=\"info-item\"><b>Downloads</b>${image.downloads}</p>\n                      </div>\n                </div>`;\n      });\n      cardList.insertAdjacentHTML('beforeend', cardMarkup.join(''));\n\n      if (fetchImages.page !== 1) {\n        const { height: cardHeight } = document\n          .querySelector('.gallery')\n          .firstElementChild.getBoundingClientRect();\n\n        window.scrollBy({\n          top: cardHeight * 2,\n          behavior: 'smooth',\n        });\n      }\n\n      fetchImages.nextPage();\n      galleryOfImages.refresh();\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}"],"names":["$1f0dc3b9307be026$var$form","document","getElementById","$1f0dc3b9307be026$var$input","querySelector","$1f0dc3b9307be026$var$cardList","$1f0dc3b9307be026$var$loadMoreBtn","$1f0dc3b9307be026$var$fetchImages","$cZ3l6","default","$1f0dc3b9307be026$var$galleryOfImages","$parcel$interopDefault","$fZKcF","async","$1f0dc3b9307be026$var$fetchImagesFoo","response","getImages","arrayOfImages","data","hits","maxAllowedAmountOfPages","Math","ceil","totalHits","perPage","$iQIUW","Notify","failure","page","classList","remove","info","add","warning","cardMarkup","map","image","largeImageURL","webformatURL","tags","likes","views","comments","downloads","insertAdjacentHTML","join","height","cardHeight","firstElementChild","getBoundingClientRect","window","scrollBy","top","behavior","nextPage","refresh","error","console","log","addEventListener","e","preventDefault","currentQuery","value","trim","innerHTML","resetPage","searchQuery"],"version":3,"file":"maintask.eb1bbd6c.js.map"}